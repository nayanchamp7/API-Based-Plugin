{"version":3,"sources":["amu.js"],"names":["jQuery","document","ready","$","amu_js","init","on","this","refreshData","time_diff","getTimeDiff","getLocalData","localStorage","getItem","getUsers","JSON","parse","createList","final_hour","local_data","now","diff_time","last_time","Date","getTime","date_diff","data","html","headers","users","header_items","scope","each","index","attr","id","class","text","user_item_td","appendTo","clone","row","date","item","append","prepend","get","status","execute","preventDefault","localData","last_execution_time","setItem","stringify","remove","e"],"mappings":"aAIAA,OAAAC,UAAAC,MAAA,SAAAC,GAGIA,EAAAC,OAAA,CAGIC,KAAI,WAAEF,EAAAA,UAAAF,GAAAK,QAAY,cAAAC,KAAAC,aAKd,IAAAC,EAAaF,KAAGG,cAGZC,EAAeC,aAAAA,QAAaC,gBAChC,OAAIF,GAAoC,EAApCF,EAAAF,KAAAO,YAEGH,EAAAA,KAAAI,MAAAC,GACHL,KAAAA,WAAYM,EAAQD,QAOxBN,YAAIQ,WACAC,IAIOC,EAIMC,EARbF,EAAaP,EAAjBO,EAAcP,aAAGA,QAAaC,gBAiB9B,OAhBI,OAAAM,IAKAE,EAAIA,GAESA,GALTC,EADJH,KAAkBH,MAAMG,GACRA,sBACTC,GAAGA,IAAAG,MAAWC,WAIRH,EAASC,EAETD,EAAYC,EAIzBJ,EADIO,IAAYF,KAASF,GACZI,WAAAA,GAGjBP,GAKAD,WAAA,SAAAS,GAGEvB,EAAAA,+BAAAwB,KAAFA,IAEIC,EAAAA,+BAAAA,KAAJD,IACIE,EAAAA,4BAAAA,KAAJF,IAEQG,IAAAA,EAAAA,EAAYJ,KAAKA,QACjBK,EAAOL,EADuBA,KAAAA,KAE5B1B,OAAAA,KAAEgC,EAF0BJ,SAAAK,EAAAA,GAG9BH,EAAOA,EAAA,QAAAI,KAAAA,CAHQH,MAAAA,MAMPI,GAAAA,QACAC,MAAA,8CAJDC,KAJfA,GAWQC,EAAAA,SAAiBC,+BACZT,EAAAA,QADyBU,SAAAD,iCAG9BvC,OAAAA,KAAOgC,EAAAH,SAAAI,EAAAA,GAHX,IAAAK,EAAAA,EAAA,QAAAJ,KAAAA,CAMYH,MAAAA,MAEDI,GAAAA,QACKC,MAAA,8CAIhBE,EAAYG,EAACJ,QAEbC,EAAYI,IAAZnB,KAAqBc,EAAU,MAI7BK,GAHWF,IAAaG,KAAKpB,GACVc,iBAEnBK,EAAA,MAhFHJ,EAAAA,KAAAD,EAAA,IAAAE,SAAAA,GAoFGD,EAAAA,QAAAE,KAAWH,EAAA,OAAAE,SAAAA,GACjBD,EAAAA,QAAAE,KAAAH,EAAA,OAAAE,SAAAA,GACED,EAAAA,QAAFE,KAAAH,EAAgC,OAAAE,SAAAA,GAEzBD,EAAAA,QAAAE,KAAAH,GAAAK,SAAAH,GAEGnC,EAAAA,4BAAFwC,OAAAA,MAIAhC,SAAAA,WAEET,EAAAA,sBAAA0C,QAAFA,+HARR1C,EAAAA,IAAA2C,sCAAA,SAAApB,EAAAA,GAxFG,YAAAqB,IAqGM5C,EAAAA,OAAAC,SAAA4C,GACPC,EAAFC,IAVQA,qBAAUC,IAAV5B,MAAoCA,UAanCT,EAAAA,KAATY,EACHd,aAAAA,QAAAwC,eAAArC,KAAAA,UAAAsC,IA1GLlD,EAAAA,OAAAC,WAAAa,GA6GAd,EAAAA,gBAAAmD,aARI9C,YAAW,SAAE+C,GACTA,EAAAA,iBAGApD,EAAAA,OAAEC,aAIVD,EAACC,OAADC","file":"amu.min.js","sourcesContent":["/**\n * Awesome Users Admin JS\n *\n * Copyright (c) 2019 Awesome Motive\n * Licensed under the GPLv2+ license.\n */\njQuery(document).ready(function ($) {\n    'use strict';\n\n    $.amu_js = {\n        init: function () {\n            //events\n            $(document).on('click', '.amu-button', this.refreshData);\n\n            // get difference time between last execution time and current time in hour\n            let time_diff = this.getTimeDiff();\n\n            //methods\n            let getLocalData = localStorage.getItem('awesomeUsers');\n            if( null === getLocalData || ( time_diff > 1 ) ) {\n                this.getUsers();\n            } else {\n                getLocalData = JSON.parse(getLocalData);\n                this.createList(getLocalData.data);\n            }\n\n        },\n\n        getTimeDiff: function () {\n            let final_hour = 0;\n            let local_data = localStorage.getItem('awesomeUsers');\n            if( null !== local_data ) {\n                local_data = JSON.parse(local_data);\n                let last_time = local_data.last_execution_time;\n                let now = new Date().getTime();\n\n                let diff_time = '';\n                if (last_time < now) {\n                    diff_time = now - last_time;\n                }else{\n                    diff_time = last_time - now;\n                }\n\n                let date_diff = new Date(diff_time);\n                final_hour = date_diff.getHours() - 5;\n            }\n\n            return final_hour;\n        },\n\n        createList: function(data) {\n\n            //clean dom\n            $('.amu-wrapper table thead tr').html('');\n            $('.amu-wrapper table tfoot tr').html('');\n            $('.amu-wrapper table tbody').html('');\n\n            let headers = data.data.headers;\n            let users = data.data.rows;\n            jQuery.each(headers, function(index, item) {\n                let header_items = $('<th>').attr({\n                    scope: 'col',\n                    id: 'event',\n                    class: 'manage-column column-event column-primary',\n                }).text(item);\n\n                header_items.appendTo('.amu-wrapper table thead tr');\n                header_items.clone().appendTo('.amu-wrapper table tfoot tr');\n            });\n            jQuery.each(users, function(index, item) {\n                let user_item_td = $('<td>').attr({\n                    scope: 'col',\n                    id: 'event',\n                    class: 'manage-column column-event column-primary',\n                });\n\n                let row = $('<tr>');\n\n                let date = new Date(item['date']);\n                    let new_date = new Date(date);\n                let new_time = new_date.toLocaleString();\n                    date = item['date'];\n\n                user_item_td.text(item['id']).appendTo(row);\n                user_item_td.clone().text(item['fname']).appendTo(row);\n                user_item_td.clone().text(item['lname']).appendTo(row);\n                user_item_td.clone().text(item['email']).appendTo(row);\n                user_item_td.clone().text(date).appendTo(row);\n\n                $('.amu-wrapper table tbody').append(row);\n            });\n        },\n\n        getUsers: function() {\n            //load spinner\n            $('.amu-wrapper table').prepend('<div class=\"amu-spinner\"><div class=\"amu-spinner-content\"><span class=\"amu-spinner-img\"></span> Loading Data...</div></div>');\n\n            $.get( \"https://miusage.com/v1/challenge/1/\", function( data, status ) {\n                if( \"success\" === status ) {\n                    $.amu_js.execute = false;\n                    let localData = {};\n                    localData.last_execution_time = new Date().getTime();\n                    localData.data = data;\n                    localStorage.setItem('awesomeUsers', JSON.stringify(localData));\n                    $.amu_js.createList(data);\n                    $('.amu-spinner').remove();\n                }\n            });\n        },\n\n        refreshData: function(e) {\n            e.preventDefault();\n\n            //refresh and get users\n            $.amu_js.getUsers();\n        }\n    };\n\n    $.amu_js.init();\n});"]}